package com.camhistory.stream.entity.converters;import com.fasterxml.jackson.core.JsonProcessingException;import com.fasterxml.jackson.databind.ObjectMapper;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import javax.persistence.AttributeConverter;import java.io.IOException;import java.nio.charset.StandardCharsets;import java.util.HashMap;import java.util.Map;public class JsonConverter implements AttributeConverter<Map<String, Object>, String> {    private static final Logger LOGGER = LoggerFactory.getLogger(JsonConverter.class);    @Override    @SuppressWarnings("unchecked")    public Map<String, Object> convertToEntityAttribute(String attribute)    {        if (attribute == null) {            return new HashMap<>();        }        try        {            byte[] attributeBytes = attribute.getBytes(StandardCharsets.ISO_8859_1);            String encodedAttribute = new String(attributeBytes);            ObjectMapper objectMapper = new ObjectMapper();            return objectMapper.readValue(encodedAttribute, HashMap.class);        }        catch (IOException e) {            LOGGER.info("IO Error: {}", e.getMessage());        }        return new HashMap<>();    }    @Override    public String convertToDatabaseColumn(Map<String, Object> dbData)    {        try        {            ObjectMapper objectMapper = new ObjectMapper();            return objectMapper.writeValueAsString(dbData);        }        catch (JsonProcessingException e) {            return null;        }    }}